---
import type {
	InferGetStaticParamsType,
	InferGetStaticPropsType,
	GetStaticPaths,
} from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Ephemera from "@layouts/Ephemera.astro";
import Backlinks from "@components/Backlinks.astro";

export const getStaticPaths = (async () => {
	const posts: CollectionEntry<"ephemera">[] = await getCollection("ephemera");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: {
			post: post,
			body: post.body,
			date: post.data.date,
			image: post.data.image,
			syndication: post.data.syndication,
			youtube: post.data.youtube,
		},
	}));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { slug } = Astro.params as Params;
const { post, body, date, image, syndication, youtube } = Astro.props as Props;

const { Content } = await post.render();

const canonicalURL = new URL(`ephemera/${slug}`, Astro.site)
	.toString()
	.replace(".html", "");
---

<Ephemera
	title={date.toLocaleDateString("en-us", {
		year: "numeric",
		month: "short",
		day: "numeric",
	})}
	youtube={youtube}
	description={body}
	syndication={syndication || []}
	canonicalURL={canonicalURL}
	galleryPath={`/ephemera/${slug}`}
	OGImage={image?.src}
	heroImage={image?.src}
>
	<Content />
	<Backlinks currentSlug={`/ephemera/${slug}`} slot="aside" />
</Ephemera>
