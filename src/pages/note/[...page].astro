---
import Layout from "@layouts/Page.astro";
import { Pagination } from "accessible-astro-components";
import FormattedDate from "@components/FormattedDate.astro";
import { getCollection } from "astro:content";

import PostLink from "@components/PostLink.astro";

export async function getStaticPaths({
	paginate,
}: {
	paginate: (data: object, config: object) => void;
}) {
	const response = await getCollection("note");
	const data = response.sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);

	return paginate(data, { pageSize: 6 });
}

const featuredPosts = (await getCollection("note"))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.filter((post) => post.data.featured === true);

const {
	page,
}: {
	page: {
		data: [];
		url: { prev: string; next: string };
		currentPage: string;
		size: number;
		total: number;
	};
} = Astro.props;
---

<style lang="scss">
	ul {
		list-style: none;
		padding: unset;
		margin: unset;
	}
	.featured-posts {
		padding: 1px 1.5rem 1.5rem;
		background-color: var(--nord1);
		border-radius: 0.5rem;

		@media (min-width: 600px) {
			display: grid;
			grid-template-columns: 1fr 1fr 1fr;
			gap: 1rem;
		}
	}
</style>

<Layout
	title="Notes"
	description="A collection of raw materials that I'm still sorting out"
	shouldShowSearch="true"
>
	<p>
		The notes section is my take on a digital garden. This is a place for me to
		learn in public and share things I've made without minimal friction.
	</p>
	<section>
		<h2>Featured Notes</h2>
		<ul class="featured-posts">
			{
				featuredPosts.map((post) => (
					<li>
						<h3>
							<a href={`/note/${post.slug}`}>{post.data.title}</a>
						</h3>
						<FormattedDate date={post.data.pubDate} />
					</li>
				))
			}
		</ul>
	</section>
	<section>
		<h2 id="all-notes">All Notes</h2>
		<ul>
			{
				page.data.map(
					(post: {
						slug: string;
						data: { pubDate: Date; title: string; description: string };
					}) => (
						<li>
							<PostLink
								href={`/note/${post.slug}`}
								text={post.data.title}
								date={post.data.pubDate}
								description={post.data.description}
							/>
						</li>
					),
				)
			}
		</ul>
	</section>
	<Pagination
		firstPage={page.url.prev ? "/note" : null}
		previousPage={page.url.prev ? page.url.prev : null}
		nextPage={page.url.next ? page.url.next : null}
		lastPage={page.url.next
			? `/note/${Math.round(page.total / page.size)}`
			: null}
		currentPage={page.currentPage}
		totalPages={Math.round(page.total / page.size)}
	/>
</Layout>
