---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

type ImageData = {
	url: string;
	alt: string;
};

type Props = {
	images: ImageData[];
	path: string;
};

const { images, path } = Astro.props;

const getFullPath = (url: string) =>
	url.startsWith("./")
		? `/src/content${path}/${url.replace("./", "")}`
		: `/src/assets/${url.replace("./", "")}`;

const imagePaths = images.map((img) => ({
	...img,
	url: getFullPath(img.url),
}));

const imageAssets = import.meta.glob<{ default: ImageMetadata }>(
	`/src/**/*.{jpeg,jpg,png,gif}`,
);

const deriveSrc = async (image: ImageData) => {
	const source = imageAssets?.[image?.url]?.();
	if (source === undefined) {
		throw new Error(
			`"${image.url}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`,
		);
	}
	return source;
};
---

<div class="gallery">
	{
		imagePaths.map((image: ImageData, index: number) => (
			<>
				<figure>
					<a href={`#image-${index}`} title={image.alt}>
						<Image src={deriveSrc(image)} alt={image.alt} />
					</a>
				</figure>
				<a
					href="#_"
					class="lightbox"
					id={`image-${index}`}
					title="Click to return to post"
				>
					<div>
						<Image src={deriveSrc(image)} alt={image.alt} />
					</div>
				</a>
			</>
		))
	}
</div>

<style lang="scss">
	.gallery {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-gap: 0.5rem;
	}

	.gallery img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		display: block;
	}

	.gallery > figure {
		margin: 0;
		padding: 0;
		grid-column: 1fr;
		grid-row: 1fr;
	}
	.lightbox {
		/* Default to hidden */
		display: none;

		/* Overlay entire screen */
		position: fixed;
		z-index: 999;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;

		/* A bit of padding around image */
		padding: 1em;

		/* Translucent background */
		background: rgba(0, 0, 0, 0.8);
	}

	/* Unhide the lightbox when it's the target */
	.lightbox:target {
		display: block;
	}

	.lightbox div {
		width: 100%;
		height: 100%;
		justify-content: center;
		align-items: center;
	}
	.lightbox div img {
		object-fit: contain;
	}
</style>
