---
import type { CollectionEntry } from "astro:content";
const { collection, baseRoute, currentTags } = Astro.props;

interface Props {
	collection: CollectionEntry<"blog">[] | CollectionEntry<"note">[];
	currentTags?: string[] | undefined;
	baseRoute: string;
}

const tags: string[] = collection
	.filter((entry) => !!entry.data.tags)
	.map((entry) => entry.data.tags)
	.flat()
	.filter((tag) => tag !== undefined);

const tagCount = (tags: string[] | undefined, tag: string) =>
	[...(tags || [])].filter((t) => t === tag).length;

const uniqueTags = [
	...new Set(
		tags
			.filter((tag) => tag !== "note")
			.filter((tag) => tag !== undefined)
			.filter(
				(tag) =>
					currentTags === undefined ||
					currentTags
						.map((currentTag) => currentTag.toLowerCase())
						.includes(tag.toLowerCase()),
			),
	),
];
---

<h2>Tags</h2>
<ul>
	{
		uniqueTags.map((tag) => (
			<li>
				<a href={`/${baseRoute}/${tag}`} title={tag}>
					{tag} ({tagCount(tags, tag)})
				</a>
			</li>
		))
	}
</ul>

<style lang="scss">
	ul {
		margin: 0.75rem 0 0 0;
		padding: 0 0 0 1rem;
	}
</style>
